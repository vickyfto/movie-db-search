{"version":3,"sources":["modules/movie-page/component/MovieRow.js","modules/movie-page/Movie.page.js"],"names":["movieRow","props","state","url","this","movie","id","window","location","href","style","marginLeft","width","key","src","poster_path","alt","title","overview","type","onClick","viewMovie","bind","value","React","Component","Movie","searchTerm","urlString","$","ajax","success","searchResults","console","log","results","movieRows","forEach","MovieRow","push","setState","rows","error","xhr","status","err","event","target","performSearch","className","autoFocus","onChange","searchChangeHandler","for"],"mappings":"0KAuCeA,E,kDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,wDAQjB,IAAMC,EAAM,oCAAsCC,KAAKH,MAAMI,MAAMC,GACnEC,OAAOC,SAASC,KAAON,I,+BAGvB,OACE,yBAAKO,MAAO,CAAEC,WAAY,MAAOC,MAAO,QACtC,wBAAIC,IAAKT,KAAKH,MAAMI,MAAMC,IACxB,4BACE,yBACEQ,IAAKV,KAAKH,MAAMI,MAAMU,YACtBC,IAAI,qBACJJ,MAAM,YAER,4BAAKR,KAAKH,MAAMI,MAAMY,OACtB,kCAAQb,KAAKH,MAAMI,MAAMa,WAE3B,6BACA,2BACEC,KAAK,SACLC,QAAShB,KAAKiB,UAAUC,KAAKlB,MAC7BmB,MAAM,e,GA7BKC,IAAMC,W,iBCIvBC,E,kDACJ,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0DAKLyB,GAAa,IAAD,OAClBC,EACJ,4FACAD,EACFE,IAAEC,KAAK,CACL3B,IAAKyB,EACLG,QAAS,SAACC,GACRC,QAAQC,IAAI,4BACZ,IAAMC,EAAUH,EAAcG,QAE1BC,EAAY,GAEhBD,EAAQE,SAAQ,SAAChC,GAEfA,EAAMU,YACJ,kCAAoCV,EAAMU,YAC5C,IAAMf,EAAW,kBAACsC,EAAD,CAAUzB,IAAKR,EAAMC,GAAID,MAAOA,IACjD+B,EAAUG,KAAKvC,MAEjB,EAAKwC,SAAS,CAAEC,KAAML,KAExBM,MAAO,SAACC,EAAKC,EAAQC,GACnBZ,QAAQS,MAAM,6B,0CAKAI,GAClBb,QAAQC,IAAIY,EAAMC,OAAOxB,OACzB,IACMI,EAAamB,EAAMC,OAAOxB,MADZnB,KAER4C,cAAcrB,K,0CAI1BvB,KAAK4C,cAAc,a,+BAInB,OACE,6BACE,8BACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,qCACb,2BACEC,WAAS,EACT5C,GAAG,QACHa,KAAK,QACL8B,UAAU,WACVE,SAAU/C,KAAKgD,oBAAoB9B,KAAKlB,QAE1C,2BAAOiD,IAAI,SAAX,oBAIN,yBAAKJ,UAAU,QAAf,IAAwB7C,KAAKF,MAAMuC,W,GA7DvBjB,IAAMC,WAmEXC","file":"static/js/7.a4be2619.chunk.js","sourcesContent":["import React from 'react';\n\nclass movieRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  viewMovie() {\n    // console.log(\"view movie\");\n    // console.log(this.props.movie.title);\n    const url = 'https://www.themoviedb.org/movie/' + this.props.movie.id;\n    window.location.href = url;\n  }\n  render() {\n    return (\n      <div style={{ marginLeft: '15%', width: '70%' }}>\n        <ul key={this.props.movie.id}>\n          <li>\n            <img\n              src={this.props.movie.poster_path}\n              alt=\"tidak bisa di muat\"\n              width=\" 230px;\"\n            ></img>\n            <h3>{this.props.movie.title}</h3>\n            <span> {this.props.movie.overview}</span>\n          </li>\n          <br></br>\n          <input\n            type=\"button\"\n            onClick={this.viewMovie.bind(this)}\n            value=\"View\"\n          ></input>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default movieRow;\n","import React from 'react';\n// import Logo from 'modules/movie-page/assets/movie.png';\nimport MovieRow from 'modules/movie-page/component/MovieRow.js';\nimport $ from 'jquery';\n// import * as css from 'modules/movie-page/style/main.css';\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  performSearch(searchTerm) {\n    const urlString =\n      'https://api.themoviedb.org/3/search/movie?api_key=f78d2ab56d78ef40fcf00b804e068e73&query=' +\n      searchTerm;\n    $.ajax({\n      url: urlString,\n      success: (searchResults) => {\n        console.log('fetche data successfully');\n        const results = searchResults.results;\n\n        var movieRows = [];\n\n        results.forEach((movie) => {\n          // console.log(movie.poster_path);\n          movie.poster_path =\n            'https://image.tmdb.org/t/p/w500' + movie.poster_path;\n          const movieRow = <MovieRow key={movie.id} movie={movie} />;\n          movieRows.push(movieRow);\n        });\n        this.setState({ rows: movieRows });\n      },\n      error: (xhr, status, err) => {\n        console.error('failed to fetch data');\n      },\n    });\n  }\n\n  searchChangeHandler(event) {\n    console.log(event.target.value);\n    const boundObject = this;\n    const searchTerm = event.target.value;\n    boundObject.performSearch(searchTerm);\n  }\n\n  componentDidMount() {\n    this.performSearch('avenger');\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <div className=\"row\">\n            <div className=\"input-field col-s12 offset-5 mt-5\">\n              <input\n                autoFocus\n                id=\"email\"\n                type=\"email\"\n                className=\"validate\"\n                onChange={this.searchChangeHandler.bind(this)}\n              />\n              <label for=\"email\">Search Movies</label>\n            </div>\n          </div>\n        </form>\n        <div className=\"mt-5\"> {this.state.rows}</div>\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n"],"sourceRoot":""}